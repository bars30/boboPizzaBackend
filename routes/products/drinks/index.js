const express = require('express');
const router = express.Router();
const {client} = require('../../../db');


router.get('/', async (req, res) => {
 try {
     // –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–∏—Ü—Ü
     const pizzasQuery = `
         SELECT * FROM drinks
     `;
     const variationsQuery = `
         SELECT * FROM drinks_variations
     `;

     // –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å—ã
     const drinksResult = await client.query(pizzasQuery);
     const variationsResult = await client.query(variationsQuery);

     // –ò–∑–≤–ª–µ–∫–∞–µ–º —Å—Ç—Ä–æ–∫–∏ –∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∑–∞–ø—Ä–æ—Å–æ–≤
     const drinks = drinksResult.rows;
     const variations = variationsResult.rows;
  console.log(drinks);
console.log(variations);
  
     // –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –Ω—É–∂–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
     const result = drinks.map(drinks => {
      console.log("üü†", variations);
      
         const drinksVariations = variations.filter(v => v.drink_id === drinks.id);
 console.log("ü•é", drinksVariations);
 

         return {
             name: drinks.name,
             description: drinks.description,
             variations: drinksVariations.map(variation => ({
                 volume_ml: variation.volume_ml,
                 price: variation.price,
                 is_available: variation.is_available,
                 image_url: variation.image_url,
             })),
         };
     });

     res.json(result);
 } catch (err) {
     console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ drinks:', err);
     res.status(500).json({ message: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
 }
});


module.exports = router;